EX1

import numpy as np
from sklearn.model_selection import train_test_split
from sklearn import datasets
from sklearn.decomposition import PCA

iris_dataset = datasets.load_iris()
X=iris_dataset['data']
y=iris_dataset['target']

X_train, X_test, y_train, y_test = train_test_split(X,y)


pca = PCA(n_components=3)
X_reduced = pca.fit_transform(X_train)
X_recovered = pca.inverse_transform(X_reduced)

print(pca.components_)
print(pca.explained_variance_ratio_)

import matplotlib.pyplot as plt

fig = plt.figure(figsize=(6, 3.8), constrained_layout=True)
ax = fig.add_subplot(111, projection='3d')

#plot the points above and below the plane
ax.scatter(X_reduced[:,0],X_reduced[:,1],X_reduced[:,2])
ax.set_xlabel('X Label')
ax.set_ylabel('Y Label')
ax.set_zlabel('Z Label')
plt.show()


from sklearn.manifold import TSNE

tsne = TSNE(n_components=3, random_state=42)
X_reduced_tsne = tsne.fit_transform(X_train)

import matplotlib.pyplot as plt

fig = plt.figure(figsize=(6, 3.8), constrained_layout=True)
ax = fig.add_subplot(111, projection='3d')

#plot the points above and below the plane
ax.scatter(X_reduced_tsne[:,0],X_reduced_tsne[:,1],X_reduced_tsne[:,2])
ax.set_xlabel('X Label')
ax.set_ylabel('Y Label')
ax.set_zlabel('Z Label')
plt.show()
